{
  "version": 3,
  "sources": ["../../src/pages/formily/index.tsx"],
  "sourcesContent": ["import React from 'react'\nimport { createForm } from '@formily/core'\nimport { createSchemaField } from '@formily/react'\nimport { Form, FormItem, Input, Password, Submit } from '@formily/antd-v5'\nimport { Tabs, Card } from 'antd'\nimport * as ICONS from '@ant-design/icons'\nimport { VerifyCode } from './VerifyCode'\n\nconst normalForm = createForm({\n  validateFirst: true,\n})\n\nconst phoneForm = createForm({\n  validateFirst: true,\n})\n\nconst SchemaField = createSchemaField({\n  components: {\n    FormItem,\n    Input,\n    Password,\n    VerifyCode,\n  },\n  scope: {\n    icon(name) {\n      return React.createElement(ICONS[name])\n    },\n  },\n})\n\nconst normalSchema = {\n  type: 'object',\n  properties: {\n    username: {\n      type: 'string',\n      title: '用户名',\n      required: true,\n      'x-decorator': 'FormItem',\n      'x-component': 'Input',\n      'x-component-props': {\n        prefix: \"{{icon('UserOutlined')}}\",\n      },\n    },\n    password: {\n      type: 'string',\n      title: '密码',\n      required: true,\n      'x-decorator': 'FormItem',\n      'x-component': 'Password',\n      'x-component-props': {\n        prefix: \"{{icon('LockOutlined')}}\",\n      },\n    },\n  },\n}\n\nconst phoneSchema = {\n  type: 'object',\n  properties: {\n    phone: {\n      type: 'string',\n      title: '手机号',\n      required: true,\n      'x-validator': 'phone',\n      'x-decorator': 'FormItem',\n      'x-component': 'Input',\n      'x-component-props': {\n        prefix: \"{{icon('PhoneOutlined')}}\",\n      },\n    },\n    verifyCode: {\n      type: 'string',\n      title: '验证码',\n      required: true,\n      'x-decorator': 'FormItem',\n      'x-component': 'VerifyCode',\n      'x-component-props': {\n        prefix: \"{{icon('LockOutlined')}}\",\n      },\n      'x-reactions': [\n        {\n          dependencies: ['.phone#value', '.phone#valid'],\n          fulfill: {\n            state: {\n              'component[1].readyPost': '{{$deps[0] && $deps[1]}}',\n              'component[1].phoneNumber': '{{$deps[0]}}',\n            },\n          },\n        },\n      ],\n    },\n  },\n}\n\nexport default () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        background: '#eee',\n        padding: '40px 0',\n      }}\n    >\n      <Card style={{ width: 400 }}>\n        <Tabs style={{ overflow: 'visible', marginTop: -10 }}>\n          <Tabs.TabPane key=\"1\" tab=\"账密登录\">\n            <Form\n              form={normalForm}\n              layout=\"vertical\"\n              size=\"large\"\n              onAutoSubmit={console.log}\n              onAutoSubmitFailed={console.log}\n            >\n              <SchemaField schema={normalSchema} />\n              <Submit block size=\"large\">\n                登录\n              </Submit>\n            </Form>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"2\" tab=\"手机登录\">\n            <Form\n              form={phoneForm}\n              layout=\"vertical\"\n              size=\"large\"\n              onAutoSubmit={console.log}\n            >\n              <SchemaField schema={phoneSchema} />\n              <Submit block size=\"large\">\n                登录\n              </Submit>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <a href=\"#新用户注册\">新用户注册</a>\n          <a href=\"#忘记密码\">忘记密码?</a>\n        </div>\n      </Card>\n    </div>\n  )\n}"],
  "mappings": ";;;;;;;;AAAA,OAAOA,WAAW;AAClB,SAASC,kBAAkB;AAC3B,SAASC,yBAAyB;AAClC,SAASC,MAAMC,UAAUC,OAAOC,UAAUC,cAAc;AACxD,SAASC,MAAMC,YAAY;AAC3B,YAAYC,WAAW;AAGvB,IAAMC,aAAaC,WAAW;EAC5BC,eAAe;AACjB,CAAA;AAEA,IAAMC,YAAYF,WAAW;EAC3BC,eAAe;AACjB,CAAA;AAEA,IAAME,cAAcC,kBAAkB;EACpCC,YAAY;IACVC;IACAC;IACAC;IACAC;EACF;EACAC,OAAO;IACLC,KAAKC,MAAI;AACP,aAAOC,sBAAMC,cAAcC,MAAMH,IAAAA,CAAK;IACxC;EACF;AACF,CAAA;AAEA,IAAMI,eAAe;EACnBC,MAAM;EACNC,YAAY;IACVC,UAAU;MACRF,MAAM;MACNG,OAAO;MACPC,UAAU;MACV,eAAe;MACf,eAAe;MACf,qBAAqB;QACnBC,QAAQ;MACV;IACF;IACAC,UAAU;MACRN,MAAM;MACNG,OAAO;MACPC,UAAU;MACV,eAAe;MACf,eAAe;MACf,qBAAqB;QACnBC,QAAQ;MACV;IACF;EACF;AACF;AAEA,IAAME,cAAc;EAClBP,MAAM;EACNC,YAAY;IACVO,OAAO;MACLR,MAAM;MACNG,OAAO;MACPC,UAAU;MACV,eAAe;MACf,eAAe;MACf,eAAe;MACf,qBAAqB;QACnBC,QAAQ;MACV;IACF;IACAI,YAAY;MACVT,MAAM;MACNG,OAAO;MACPC,UAAU;MACV,eAAe;MACf,eAAe;MACf,qBAAqB;QACnBC,QAAQ;MACV;MACA,eAAe;QACb;UACEK,cAAc;YAAC;YAAgB;;UAC/BC,SAAS;YACPC,OAAO;cACL,0BAA0B;cAC1B,4BAA4B;YAC9B;UACF;QACF;;IAEJ;EACF;AACF;AAEA,IAAA,kBAAe,MAAA;AACb,SACE,wBAACC,OAAAA;IACCC,OAAO;MACLC,SAAS;MACTC,gBAAgB;MAChBC,YAAY;MACZC,SAAS;IACX;cAEA,wBAACC,MAAAA;MAAKL,OAAO;QAAEM,OAAO;MAAI;;QACxB,wBAACC,MAAAA;UAAKP,OAAO;YAAEQ,UAAU;YAAWC,WAAW;UAAI;;YACjD,wBAACF,KAAKG,SAAO;cAASC,KAAI;wBACxB,wBAACC,MAAAA;gBACCC,MAAM7C;gBACN8C,QAAO;gBACPC,MAAK;gBACLC,cAAcC,QAAQC;gBACtBC,oBAAoBF,QAAQC;;kBAE5B,wBAAC9C,aAAAA;oBAAYgD,QAAQnC;;;;;;kBACrB,wBAACoC,QAAAA;oBAAOC,OAAK;oBAACP,MAAK;8BAAQ;;;;;;;;;;;;eATb,KAAA,OAAA;;;;;YAclB,wBAACR,KAAKG,SAAO;cAASC,KAAI;wBACxB,wBAACC,MAAAA;gBACCC,MAAM1C;gBACN2C,QAAO;gBACPC,MAAK;gBACLC,cAAcC,QAAQC;;kBAEtB,wBAAC9C,aAAAA;oBAAYgD,QAAQ3B;;;;;;kBACrB,wBAAC4B,QAAAA;oBAAOC,OAAK;oBAACP,MAAK;8BAAQ;;;;;;;;;;;;eARb,KAAA,OAAA;;;;;;;;;;;QAcpB,wBAAChB,OAAAA;UACCC,OAAO;YACLC,SAAS;YACTC,gBAAgB;UAClB;;YAEA,wBAACqB,KAAAA;cAAEC,MAAK;wBAAS;;;;;;YACjB,wBAACD,KAAAA;cAAEC,MAAK;wBAAQ;;;;;;;;;;;;;;;;;;;;;;;AAK1B;",
  "names": ["React", "createForm", "createSchemaField", "Form", "FormItem", "Input", "Password", "Submit", "Tabs", "Card", "ICONS", "normalForm", "createForm", "validateFirst", "phoneForm", "SchemaField", "createSchemaField", "components", "FormItem", "Input", "Password", "VerifyCode", "scope", "icon", "name", "React", "createElement", "ICONS", "normalSchema", "type", "properties", "username", "title", "required", "prefix", "password", "phoneSchema", "phone", "verifyCode", "dependencies", "fulfill", "state", "div", "style", "display", "justifyContent", "background", "padding", "Card", "width", "Tabs", "overflow", "marginTop", "TabPane", "tab", "Form", "form", "layout", "size", "onAutoSubmit", "console", "log", "onAutoSubmitFailed", "schema", "Submit", "block", "a", "href"]
}
