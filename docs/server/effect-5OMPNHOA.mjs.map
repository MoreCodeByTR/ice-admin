{
  "version": 3,
  "sources": ["../../src/pages/effect/index.tsx"],
  "sourcesContent": ["import { Button, Modal } from 'antd';\nimport { useEffect, useState } from 'react';\n\nconst GlobalCount = {\n  value: 1,\n};\nconst EffectDemo = () => {\n  const [show, setShow] = useState<boolean>(true);\n  const [count, setCount] = useState(() => 10);\n\n  const onHidden = () => {\n    setShow(false);\n  };\n\n  const onShow = () => {\n    setShow(true);\n  };\n\n  const update = () => {\n    setCount((val) => { return val + 1; });\n  };\n\n  return (\n    <div>\n      <div>effect</div>\n      <CountClick open={show} onClose={onHidden} />\n      <Button type=\"primary\" onClick={onShow}>show</Button>\n      <Button type=\"primary\" onClick={update}>update parent</Button>\n    </div>\n  );\n};\n\nconst CountClick = (props) => {\n  const { open, onClose } = props;\n  const [count, setCount] = useState(0);\n\n  console.log('child render');\n\n\n  useEffect(() => {\n   console.log('CountClick mounted');\n\n    return () => {\n      console.log('unmount');\n    };\n  }, []);\n\n\n  const addCount = () => {\n    GlobalCount.value += 1;\n    setCount(GlobalCount.value);\n  };\n  return (<Modal open={open} width={600} onCancel={onClose}>\n    <div onClick={addCount}>click{GlobalCount.value}</div>;\n    <ModalChild />\n  </Modal>);\n};\n\nconst ModalChild = () => {\n  useEffect(() => {\n    return () => {\n      console.log('ModalChild destoryed');\n    };\n  }, []);\n  return <>child</>;\n};\n\nexport default EffectDemo;\n"],
  "mappings": ";;;;;AAAA,SAASA,QAAQC,aAAa;AAC9B,SAASC,WAAWC,gBAAgB;AAEpC,IAAMC,cAAc;EAClBC,OAAO;AACT;AACA,IAAMC,aAAa,MAAA;AACjB,QAAM,CAACC,MAAMC,OAAAA,IAAWL,SAAkB,IAAA;AAC1C,QAAM,CAACM,OAAOC,QAAAA,IAAYP,SAAS,MAAM,EAAA;AAEzC,QAAMQ,WAAW,MAAA;AACfH,YAAQ,KAAA;EACV;AAEA,QAAMI,SAAS,MAAA;AACbJ,YAAQ,IAAA;EACV;AAEA,QAAMK,SAAS,MAAA;AACbH,aAAS,CAACI,QAAAA;AAAU,aAAOA,MAAM;IAAG,CAAA;EACtC;AAEA,SACE,wBAACC,OAAAA;;MACC,wBAACA,OAAAA;kBAAI;;;;;;MACL,wBAACC,YAAAA;QAAWC,MAAMV;QAAMW,SAASP;;;;;;MACjC,wBAACX,QAAAA;QAAOmB,MAAK;QAAUC,SAASR;kBAAQ;;;;;;MACxC,wBAACZ,QAAAA;QAAOmB,MAAK;QAAUC,SAASP;kBAAQ;;;;;;;;;;;;AAG9C;AAEA,IAAMG,aAAa,CAACK,UAAAA;AAClB,QAAM,EAAEJ,MAAMC,QAAO,IAAKG;AAC1B,QAAM,CAACZ,OAAOC,QAAAA,IAAYP,SAAS,CAAA;AAEnCmB,UAAQC,IAAI,cAAA;AAGZrB,YAAU,MAAA;AACToB,YAAQC,IAAI,oBAAA;AAEX,WAAO,MAAA;AACLD,cAAQC,IAAI,SAAA;IACd;EACF,GAAG,CAAA,CAAE;AAGL,QAAMC,WAAW,MAAA;AACfpB,gBAAYC,SAAS;AACrBK,aAASN,YAAYC,KAAK;EAC5B;AACA,SAAQ,wBAACJ,OAAAA;IAAMgB;IAAYQ,OAAO;IAAKC,UAAUR;;MAC/C,wBAACH,OAAAA;QAAIK,SAASI;;UAAU;UAAMpB,YAAYC;;;;;;;MAAY;MACtD,wBAACsB,YAAAA,CAAAA,GAAAA,QAAAA,OAAAA;;;;;;;;;;;AAEL;AAEA,IAAMA,aAAa,MAAA;AACjBzB,YAAU,MAAA;AACR,WAAO,MAAA;AACLoB,cAAQC,IAAI,sBAAA;IACd;EACF,GAAG,CAAA,CAAE;AACL,SAAO,wBAAA,WAAA;cAAE;;AACX;AAEA,IAAA,iBAAejB;",
  "names": ["Button", "Modal", "useEffect", "useState", "GlobalCount", "value", "EffectDemo", "show", "setShow", "count", "setCount", "onHidden", "onShow", "update", "val", "div", "CountClick", "open", "onClose", "type", "onClick", "props", "console", "log", "addCount", "width", "onCancel", "ModalChild"]
}
